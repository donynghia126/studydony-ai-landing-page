// Data for translations in different languages
const translations = {
  vi: {
    title: "Tr·ª£ L√Ω H·ªçc Thu·∫≠t AI - H·ªçc S√¢u H∆°n, Nhanh H∆°n, Th√¥ng Minh H∆°n",
    metaDescription:
      "StudyDony AI l√† tr·ª£ l√Ω h·ªçc thu·∫≠t c√° nh√¢n c·ªßa b·∫°n, gi√∫p b·∫°n gi·∫£i th√≠ch kh√°i ni·ªám, g·ª° l·ªói code, v√† x√¢y d·ª±ng l·ªô tr√¨nh h·ªçc t·∫≠p. H·ªçc s√¢u h∆°n, nhanh h∆°n, v√† th√¥ng minh h∆°n v·ªõi AI.",
    ogTitle: "StudyDony AI - Tr·ª£ L√Ω H·ªçc Thu·∫≠t C√° Nh√¢n C·ªßa B·∫°n",
    ogDescription:
      "H·ªçc S√¢u H∆°n, Nhanh H∆°n, Th√¥ng Minh H∆°n. Kh∆°i d·∫≠y ti·ªÅm nƒÉng, chinh ph·ª•c tri th·ª©c c√πng ƒë·ªëi t√°c h·ªçc t·∫≠p th·∫ø h·ªá m·ªõi.",
    appName: "üéì StudyDony AI",
    navHome: "Trang Ch·ªß",
    navFeatures: "T√≠nh NƒÉng",
    navSubjects: "M√¥n H·ªçc",
    navAboutUs: "V·ªÅ Ch√∫ng T√¥i",
    navPricing: "B·∫£ng Gi√°",
    navAudience: "ƒê·ªëi T∆∞·ª£ng",
    navFAQ: "FAQ",
    navCTA: "D√πng Th·ª≠ Chatbot",
    heroTitle: "Tr·ª£ L√Ω H·ªçc Thu·∫≠t AI C√° Nh√¢n C·ªßa B·∫°n",
    heroSlogan:
      "H·ªçc S√¢u H∆°n, Nhanh H∆°n, Th√¥ng Minh H∆°n. Kh∆°i d·∫≠y ti·ªÅm nƒÉng, chinh ph·ª•c tri th·ª©c c√πng ƒë·ªëi t√°c h·ªçc t·∫≠p th·∫ø h·ªá m·ªõi.",
    heroCTA: "B·∫Øt ƒê·∫ßu H·ªçc Mi·ªÖn Ph√≠",
    featuresTitle: "T·∫•t C·∫£ C√¥ng C·ª• B·∫°n C·∫ßn ƒê·ªÉ Th√†nh C√¥ng",
    featuresSubtitle:
      "T·ª´ gi·∫£i ƒë√°p b√†i t·∫≠p ph·ª©c t·∫°p ƒë·∫øn x√¢y d·ª±ng l·ªô tr√¨nh h·ªçc t·∫≠p, StudyDony AI lu√¥n s·∫µn s√†ng h·ªó tr·ª£.",
    feature1Title: "Gi·∫£i Th√≠ch Kh√°i Ni·ªám",
    feature1Desc:
      "Bi·∫øn nh·ªØng ch·ªß ƒë·ªÅ ph·ª©c t·∫°p nh·∫•t tr·ªü n√™n d·ªÖ hi·ªÉu qua c√°c v√≠ d·ª• tr·ª±c quan v√† gi·∫£i th√≠ch ƒë∆°n gi·∫£n.",
    feature2Title: "G·ª° L·ªói & T·ªëi ∆Øu Code",
    feature2Desc:
      "T√¨m v√† s·ª≠a l·ªói code nhanh ch√≥ng. Nh·∫≠n g·ª£i √Ω ƒë·ªÉ t·ªëi ∆∞u h√≥a v√† h·ªçc c√°c ph∆∞∆°ng ph√°p l·∫≠p tr√¨nh t·ªët nh·∫•t.",
    feature3Title: "T√¨m Ki·∫øm T√†i Li·ªáu",
    feature3Desc:
      "T·ªïng h·ª£p v√† t√≥m t·∫Øt th√¥ng tin t·ª´ c√°c ngu·ªìn h·ªçc thu·∫≠t uy t√≠n, gi√∫p b·∫°n ti·∫øt ki·ªám th·ªùi gian nghi√™n c·ª©u.",
    feature4Title: "X√¢y D·ª±ng L·ªô Tr√¨nh",
    feature4Desc:
      "T·∫°o ra c√°c k·∫ø ho·∫°ch h·ªçc t·∫≠p c√° nh√¢n h√≥a ƒë·ªÉ b·∫°n c√≥ th·ªÉ chinh ph·ª•c b·∫•t k·ª≥ k·ªπ nƒÉng hay m√¥n h·ªçc n√†o.",
    demo1Label: "H√£y th·ª≠ h·ªèi v·ªÅ m·ªôt kh√°i ni·ªám:",
    demo1Placeholder: "v√≠ d·ª•: Quang h·ª£p",
    demo1Button: "‚ú® Gi·∫£i th√≠ch",
    demo1Loading: "ƒêang x·ª≠ l√Ω...",
    demo1Error: "ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i.",
    subjectsTitle: "Kh√°m Ph√° C√°c M√¥n H·ªçc",
    subjectsSubtitle:
      "T·ª´ l·∫≠p tr√¨nh ƒë·∫øn to√°n h·ªçc, ch√∫ng t√¥i c√≥ m·ªçi th·ª© b·∫°n c·∫ßn ƒë·ªÉ th√†nh c√¥ng.",
    previewTag: "Preview",
    tagWebDev: "L·∫≠p Tr√¨nh Web",
    tagMath: "To√°n H·ªçc",
    tagPhysics: "V·∫≠t L√Ω",
    tagEnglish: "Ti·∫øng Anh",
    tagCompetition: "Ch·∫ø ƒë·ªô Thi ƒë·∫•u",
    subjectWeb1Title: "HTML & CSS",
    subjectWeb1Desc: "C·∫•u tr√∫c trang web v√† styling c∆° b·∫£n.",
    subjectWeb2Title: "JavaScript",
    subjectWeb2Desc: "DOM manipulation, Events v√† ES6 syntax.",
    subjectWeb3Title: "Frontend Framework",
    subjectWeb3Desc: "React/Vue components, Props v√† State management.",
    subjectWeb4Title: "Backend API",
    subjectWeb4Desc: "RESTful principles, CRUD operations v√† HTTP basics.",
    subjectWeb5Title: "Database",
    subjectWeb5Desc: "SQL queries, indexing v√† ORM basics.",
    subjectWeb6Title: "DevOps",
    subjectWeb6Desc: "Docker, CI/CD pipelines v√† deployment.",
    subjectMath1Title: "ƒê·∫°i s·ªë",
    subjectMath1Desc: "Gi·∫£i ph∆∞∆°ng tr√¨nh, b·∫•t ƒë·∫≥ng th·ª©c v√† h·ªá ph∆∞∆°ng tr√¨nh.",
    subjectMath2Title: "H√¨nh h·ªçc",
    subjectMath2Desc: "T√≠nh to√°n chu vi, di·ªán t√≠ch, th·ªÉ t√≠ch v√† c√°c ƒë·ªãnh l√Ω.",
    subjectMath3Title: "Gi·∫£i t√≠ch",
    subjectMath3Desc: "Gi·ªõi h·∫°n, ƒë·∫°o h√†m, t√≠ch ph√¢n v√† ·ª©ng d·ª•ng.",
    subjectPhysics1Title: "C∆° h·ªçc",
    subjectPhysics1Desc: "Chuy·ªÉn ƒë·ªông, l·ª±c, nƒÉng l∆∞·ª£ng v√† ƒë·ªãnh lu·∫≠t Newton.",
    subjectPhysics2Title: "ƒêi·ªán h·ªçc",
    subjectPhysics2Desc:
      "D√≤ng ƒëi·ªán, m·∫°ch ƒëi·ªán, v√† c√°c ƒë·ªãnh lu·∫≠t Ohm, Kirchhoff.",
    subjectPhysics3Title: "Quang h·ªçc",
    subjectPhysics3Desc:
      "Ph·∫£n x·∫°, kh√∫c x·∫°, th·∫•u k√≠nh v√† c√°c hi·ªán t∆∞·ª£ng quang h·ªçc.",
    subjectEnglish1Title: "Ng·ªØ ph√°p",
    subjectEnglish1Desc: "C√°c th√¨, c·∫•u tr√∫c c√¢u, v√† c√°c quy t·∫Øc ng·ªØ ph√°p.",
    subjectEnglish2Title: "T·ª´ v·ª±ng",
    subjectEnglish2Desc: "M·ªü r·ªông v·ªën t·ª´ theo ch·ªß ƒë·ªÅ v√† ng·ªØ c·∫£nh.",
    subjectEnglish3Title: "Luy·ªán thi",
    subjectEnglish3Desc: "Chi·∫øn thu·∫≠t v√† b√†i t·∫≠p cho IELTS, TOEIC, TOEFL.",
    subjectCompetition1Title: "Gi·∫£i thu·∫≠t Thi ƒë·∫•u",
    subjectCompetition1Desc:
      "Th·ª≠ th√°ch v·ªõi c√°c b√†i to√°n s·∫Øp x·∫øp, t√¨m ki·∫øm, quy ho·∫°ch ƒë·ªông.",
    subjectCompetition2Title: "Luy·ªán ƒë·ªÅ tr·∫Øc nghi·ªám",
    subjectCompetition2Desc:
      "Th·ª±c h√†nh c√°c b·ªô ƒë·ªÅ thi th·ª≠ v·ªõi th·ªùi gian gi·ªõi h·∫°n.",
    subjectCompetition3Title: "ƒê·ªëi kh√°ng AI",
    subjectCompetition3Desc:
      "So t√†i gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ v·ªõi c√°c ch·∫ø ƒë·ªô kh√≥ kh√°c nhau c·ªßa AI.",
    demo2Label: "B·∫°n mu·ªën h·ªçc k·ªπ nƒÉng g√¨?",
    demo2Placeholder: "v√≠ d·ª•: H·ªçc ReactJS trong 30 ng√†y",
    demo2Button: "‚ú® T·∫°o L·ªô Tr√¨nh",
    demo2Error: "ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i.",
    audienceTitle: "ƒê∆∞·ª£c Tin D√πng B·ªüi M·ªçi Ng∆∞·ªùi H·ªçc",
    audienceSubtitle:
      "Cho d√π b·∫°n l√† ai tr√™n h√†nh tr√¨nh tri th·ª©c, ch√∫ng t√¥i ƒë·ªÅu c√≥ gi·∫£i ph√°p d√†nh cho b·∫°n.",
    audienceChartLabels: ["Sinh Vi√™n", "H·ªçc Sinh", "Ng∆∞·ªùi T·ª± H·ªçc"],
    audienceTab1: "Sinh Vi√™n",
    audienceTab2: "H·ªçc Sinh",
    audienceTab3: "Ng∆∞·ªùi T·ª± H·ªçc",
    audience1Title: "D√†nh cho Sinh vi√™n ƒê·∫°i h·ªçc",
    audience1Desc:
      "ƒê·ªëi t√°c kh√¥ng th·ªÉ thi·∫øu cho c√°c d·ª± √°n nghi√™n c·ª©u, b√°o c√°o ph·ª©c t·∫°p v√† c√°c m√¥n h·ªçc chuy√™n ng√†nh. Ti·∫øt ki·ªám h√†ng gi·ªù t√¨m ki·∫øm t√†i li·ªáu v√† g·ª° l·ªói ƒë·ªÉ b·∫°n c√≥ th·ªÉ t·∫≠p trung v√†o vi·ªác h·ªçc s√¢u h∆°n.",
    audience1Feat1: "H·ªó tr·ª£ nghi√™n c·ª©u chuy√™n s√¢u",
    audience1Feat2: "Gi·∫£i th√≠ch thu·∫≠t to√°n & ƒë·ªãnh l√Ω",
    audience1Feat3: "Tr·ª£ gi√∫p vi·∫øt b√°o c√°o khoa h·ªçc",
    audience2Title: "D√†nh cho H·ªçc sinh THPT",
    audience2Desc:
      "Ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh gi√∫p gi·∫£i c√°c b√†i t·∫≠p kh√≥, chu·∫©n b·ªã cho c√°c k·ª≥ thi quan tr·ªçng v√† kh√°m ph√° c√°c ƒë·ªãnh h∆∞·ªõng h·ªçc t·∫≠p, ngh·ªÅ nghi·ªáp t∆∞∆°ng lai.",
    audience2Feat1: "Gi·∫£i ƒë√°p b√†i t·∫≠p To√°n, L√Ω, H√≥a",
    audience2Feat2: "H·ªá th·ªëng h√≥a ki·∫øn th·ª©c √¥n thi",
    audience2Feat3: "Kh√°m ph√° v√† ƒë·ªãnh h∆∞·ªõng ng√†nh h·ªçc",
    audience3Title: "D√†nh cho Ng∆∞·ªùi T·ª± H·ªçc",
    audience3Desc:
      "X√¢y d·ª±ng l·ªô tr√¨nh h·ªçc t·∫≠p linh ho·∫°t, cung c·∫•p ngu·ªìn t√†i nguy√™n ch·∫•t l∆∞·ª£ng v√† duy tr√¨ ƒë·ªông l·ª±c ƒë·ªÉ b·∫°n chinh ph·ª•c b·∫•t k·ª≥ k·ªπ nƒÉng m·ªõi n√†o m·ªôt c√°ch hi·ªáu qu·∫£.",
    audience3Feat1: "T·∫°o l·ªô tr√¨nh h·ªçc k·ªπ nƒÉng m·ªõi",
    audience3Feat2: "Duy tr√¨ ƒë·ªông l·ª±c h·ªçc t·∫≠p m·ªói ng√†y",
    audience3Feat3: "Th·ª±c h√†nh qua c√°c d·ª± √°n th·ª±c t·∫ø",
    aboutUsTitle: "G·∫∑p G·ª° ƒê·ªôi Ng≈©",
    aboutUsSubtitle:
      "Nh·ªØng kh·ªëi √≥c ƒë·∫ßy nhi·ªát huy·∫øt ƒë·∫±ng sau s·ª© m·ªánh gi√∫p vi·ªác h·ªçc tr·ªü n√™n d·ªÖ d√†ng cho m·ªçi ng∆∞·ªùi.",
    teamMember1Name: "Dony",
    teamMember1Role: "Nh√† S√°ng L·∫≠p & L·∫≠p Tr√¨nh Vi√™n Ch√≠nh",
    teamMember2Name: "Gemini",
    teamMember2Role: "Phi C√¥ng Ph·ª• AI",
    teamMember3Name: "B·∫°n",
    teamMember3Role: "Ng∆∞·ªùi D√πng & ƒê√≥ng G√≥p Vi√™n Qu√Ω Gi√°",
    pricingTitle: "Ch·ªçn G√≥i D·ªãch V·ª• C·ªßa B·∫°n",
    pricingSubtitle: "B·∫£ng gi√° ƒë∆°n gi·∫£n, minh b·∫°ch cho m·ªçi ng∆∞·ªùi h·ªçc.",
    plan1Name: "Mi·ªÖn Ph√≠",
    plan1Desc: "D√†nh cho ng∆∞·ªùi h·ªçc th√¥ng th∆∞·ªùng v√† ƒë·ªÉ th·ª≠ nghi·ªám.",
    planPerMonth: "/ th√°ng",
    plan1Feat1: "20 tin nh·∫Øn m·ªói ng√†y",
    plan1Feat2: "M√¥ h√¨nh AI ti√™u chu·∫©n",
    plan1Feat3: "H·ªó tr·ª£ c·ªông ƒë·ªìng",
    planButton: "B·∫Øt ƒê·∫ßu",
    planPopular: "PH·ªî BI·∫æN",
    plan2Name: "Chuy√™n Nghi·ªáp",
    plan2Desc: "D√†nh cho sinh vi√™n v√† ng∆∞·ªùi ƒëi l√†m chuy√™n t√¢m.",
    plan2Feat1: "Kh√¥ng gi·ªõi h·∫°n tin nh·∫Øn",
    plan2Feat2: "M√¥ h√¨nh AI n√¢ng cao",
    plan2Feat3: "H·ªó tr·ª£ ∆∞u ti√™n",
    plan2Feat4: "L·ªãch s·ª≠ cu·ªôc tr√≤ chuy·ªán",
    plan3Name: "Cao C·∫•p",
    plan3Desc: "D√†nh cho ƒë·ªôi nh√≥m v√† t·ªï ch·ª©c gi√°o d·ª•c.",
    plan3Price: "Li√™n H·ªá",
    plan3Feat1: "M·ªçi th·ª© trong g√≥i Pro",
    plan3Feat2: "Qu·∫£n l√Ω ƒë·ªôi nh√≥m",
    plan3Feat3: "T√≠ch h·ª£p t√πy ch·ªânh",
    plan3Feat4: "H·ªó tr·ª£ ri√™ng",
    planContactButton: "Li√™n H·ªá Kinh Doanh",
    testimonialQuote:
      '"StudyDony AI ƒë√£ thay ƒë·ªïi ho√†n to√†n c√°ch t√¥i h·ªçc. Thay v√¨ m·∫•t h√†ng gi·ªù ƒë·ªÉ debug m·ªôt l·ªói code nh·ªè, gi·ªù t√¥i c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c gi·∫£i ph√°p ch·ªâ trong v√†i ph√∫t. N√≥ th·ª±c s·ª± l√† m·ªôt ƒë·ªëi t√°c h·ªçc t·∫≠p th√¥ng minh m√† t√¥i lu√¥n ao ∆∞·ªõc."',
    testimonialName: "Nakamura Aoi",
    testimonialRole: "Sinh vi√™n nƒÉm 2, ng√†nh C√¥ng ngh·ªá Th√¥ng tin",
    faqTitle: "C√°c C√¢u H·ªèi Th∆∞·ªùng G·∫∑p",
    faqSubtitle: "M·ªçi th·∫Øc m·∫Øc c·ªßa b·∫°n ƒë·ªÅu s·∫Ω ƒë∆∞·ª£c gi·∫£i ƒë√°p t·∫°i ƒë√¢y.",
    faq1Question: "StudyDony AI c√≥ mi·ªÖn ph√≠ kh√¥ng?",
    faq1Answer:
      "C√≥! Ch√∫ng t√¥i cung c·∫•p m·ªôt g√≥i mi·ªÖn ph√≠ h√†o ph√≥ng ƒë·ªÉ b·∫°n c√≥ th·ªÉ tr·∫£i nghi·ªám c√°c t√≠nh nƒÉng c·ªët l√µi. ƒê·ªëi v·ªõi c√°c nhu c·∫ßu n√¢ng cao h∆°n, ch√∫ng t√¥i c√≥ c√°c g√≥i tr·∫£ ph√≠ v·ªõi nhi·ªÅu t√≠nh nƒÉng v∆∞·ª£t tr·ªôi.",
    faq2Question: "D·ªØ li·ªáu c·ªßa t√¥i c√≥ ƒë∆∞·ª£c b·∫£o m·∫≠t kh√¥ng?",
    faq2Answer:
      "B·∫£o m·∫≠t l√† ∆∞u ti√™n h√†ng ƒë·∫ßu c·ªßa ch√∫ng t√¥i. M·ªçi cu·ªôc h·ªôi tho·∫°i ƒë·ªÅu ƒë∆∞·ª£c m√£ h√≥a. Ch√∫ng t√¥i cam k·∫øt kh√¥ng chia s·∫ª d·ªØ li·ªáu c√° nh√¢n c·ªßa b·∫°n v·ªõi b·∫•t k·ª≥ b√™n th·ª© ba n√†o.",
    faq3Question: "AI c√≥ th·ªÉ h·ªó tr·ª£ nh·ªØng ng√¥n ng·ªØ l·∫≠p tr√¨nh n√†o?",
    faq3Answer:
      "AI c·ªßa ch√∫ng t√¥i ƒë∆∞·ª£c hu·∫•n luy·ªán tr√™n m·ªôt kho d·ªØ li·ªáu kh·ªïng l·ªì v√† c√≥ th·ªÉ h·ªó tr·ª£ h·∫ßu h·∫øt c√°c ng√¥n ng·ªØ l·∫≠p tr√¨nh ph·ªï bi·∫øn hi·ªán nay, bao g·ªìm Python, JavaScript, Java, C++, Ruby, v√† nhi·ªÅu h∆°n n·ªØa.",
    finalCtaTitle: "S·∫µn S√†ng N√¢ng T·∫ßm Vi·ªác H·ªçc?",
    finalCtaSubtitle:
      "Tham gia c√πng h√†ng ng√†n ng∆∞·ªùi h·ªçc kh√°c v√† tr·∫£i nghi·ªám t∆∞∆°ng lai c·ªßa gi√°o d·ª•c ngay h√¥m nay.",
    finalCtaButton: "D√πng Th·ª≠ Mi·ªÖn Ph√≠",
    footerLinks: "Li√™n k·∫øt",
    footerSubscribe: "ƒêƒÉng k√Ω nh·∫≠n tin",
    footerSubscribeDesc: "Nh·∫≠n tin t·ª©c v√† c·∫≠p nh·∫≠t m·ªõi nh·∫•t t·ª´ ch√∫ng t√¥i.",
    footerEmailPlaceholder: "Nh·∫≠p email c·ªßa b·∫°n",
    footerSubscribeButton: "ƒêƒÉng k√Ω",
    footerRights: "¬© 2025 StudyDony AI. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.",
    footerSlogan: "H·ªçc S√¢u H∆°n, Nhanh H∆°n, Th√¥ng Minh H∆°n.",
    footerPrivacy: "Ch√≠nh s√°ch B·∫£o m·∫≠t",
    footerTerms: "ƒêi·ªÅu kho·∫£n D·ªãch v·ª•",
  },
  en: {
    title: "AI Academic Assistant - Learn Deeper, Faster, Smarter",
    metaDescription:
      "StudyDony AI is your personal academic assistant, helping you explain concepts, debug code, and build learning roadmaps. Learn deeper, faster, and smarter with AI.",
    ogTitle: "StudyDony AI - Your Personal Academic Assistant",
    ogDescription:
      "Learn Deeper, Faster, Smarter. Unleash your potential and conquer knowledge with a next-generation learning partner.",
    appName: "üéì StudyDony AI",
    navHome: "Home",
    navFeatures: "Features",
    navSubjects: "Subjects",
    navAboutUs: "About Us",
    navPricing: "Pricing",
    navAudience: "Audience",
    navFAQ: "FAQ",
    navCTA: "Try Chatbot",
    heroTitle: "Your Personal AI Academic Assistant",
    heroSlogan:
      "Learn Deeper, Faster, Smarter. Unleash your potential and conquer knowledge with a next-generation learning partner.",
    heroCTA: "Start Learning for Free",
    featuresTitle: "All The Tools You Need To Succeed",
    featuresSubtitle:
      "From solving complex assignments to building a study roadmap, StudyDony AI is here to help.",
    feature1Title: "Concept Explanation",
    feature1Desc:
      "Make the most complex topics easy to understand through visual examples and simple explanations.",
    feature2Title: "Code Debugging & Optimization",
    feature2Desc:
      "Quickly find and fix coding errors. Get suggestions for optimization and learn best programming practices.",
    feature3Title: "Document Search",
    feature3Desc:
      "Synthesize and summarize information from reputable academic sources, saving you research time.",
    feature4Title: "Roadmap Building",
    feature4Desc:
      "Create personalized learning plans so you can conquer any skill or subject.",
    demo1Label: "Try asking about a concept:",
    demo1Placeholder: "e.g., Photosynthesis",
    demo1Button: "‚ú® Explain",
    demo1Loading: "Processing...",
    demo1Error: "An error occurred, please try again.",
    subjectsTitle: "Discover Subjects",
    subjectsSubtitle:
      "From programming to mathematics, we have everything you need to succeed.",
    previewTag: "Preview",
    tagWebDev: "Web Development",
    tagMath: "Mathematics",
    tagPhysics: "Physics",
    tagEnglish: "English",
    tagCompetition: "Competition Mode",
    subjectWeb1Title: "HTML & CSS",
    subjectWeb1Desc: "Web page structure and basic styling.",
    subjectWeb2Title: "JavaScript",
    subjectWeb2Desc: "DOM manipulation, Events, and ES6 syntax.",
    subjectWeb3Title: "Frontend Framework",
    subjectWeb3Desc: "React/Vue components, Props, and State management.",
    subjectWeb4Title: "Backend API",
    subjectWeb4Desc: "RESTful principles, CRUD operations, and HTTP basics.",
    subjectWeb5Title: "Database",
    subjectWeb5Desc: "SQL queries, indexing, and ORM basics.",
    subjectWeb6Title: "DevOps",
    subjectWeb6Desc: "Docker, CI/CD pipelines, and deployment.",
    subjectMath1Title: "Algebra",
    subjectMath1Desc:
      "Solve equations, inequalities, and systems of equations.",
    subjectMath2Title: "Geometry",
    subjectMath2Desc: "Calculate perimeters, areas, volumes, and theorems.",
    subjectMath3Title: "Calculus",
    subjectMath3Desc: "Limits, derivatives, integrals, and applications.",
    subjectPhysics1Title: "Mechanics",
    subjectPhysics1Desc: "Motion, force, energy, and Newton's laws.",
    subjectPhysics2Title: "Electricity",
    subjectPhysics2Desc: "Current, circuits, and Ohm's, Kirchhoff's laws.",
    subjectPhysics3Title: "Optics",
    subjectPhysics3Desc:
      "Reflection, refraction, lenses, and optical phenomena.",
    subjectEnglish1Title: "Grammar",
    subjectEnglish1Desc: "Tenses, sentence structures, and grammar rules.",
    subjectEnglish2Title: "Vocabulary",
    subjectEnglish2Desc: "Expand vocabulary by topic and context.",
    subjectEnglish3Title: "Test Preparation",
    subjectEnglish3Desc: "Strategies and exercises for IELTS, TOEIC, TOEFL.",
    subjectCompetition1Title: "Competitive Algorithms",
    subjectCompetition1Desc:
      "Challenge with sorting, searching, dynamic programming problems.",
    subjectCompetition2Title: "Quiz Practice",
    subjectCompetition2Desc: "Practice mock test sets with time limits.",
    subjectCompetition3Title: "AI Showdown",
    subjectCompetition3Desc:
      "Compete in problem-solving against different AI difficulty modes.",
    demo2Label: "What skill do you want to learn?",
    demo2Placeholder: "e.g., Learn ReactJS in 30 days",
    demo2Button: "‚ú® Create Roadmap",
    demo2Error: "An error occurred, please try again.",
    audienceTitle: "Trusted by All Learners",
    audienceSubtitle:
      "Whoever you are on your knowledge journey, we have a solution for you.",
    audienceChartLabels: [
      "University Students",
      "High School Students",
      "Self-Learners",
    ],
    audienceTab1: "University",
    audienceTab2: "High School",
    audienceTab3: "Self-Learners",
    audience1Title: "For University Students",
    audience1Desc:
      "An indispensable partner for research projects, complex reports, and specialized subjects. Save hours on document searching and debugging to focus on deeper learning.",
    audience1Feat1: "In-depth research support",
    audience1Feat2: "Explains algorithms & theorems",
    audience1Feat3: "Assists in scientific report writing",
    audience2Title: "For High School Students",
    audience2Desc:
      "A companion to help solve difficult exercises, prepare for important exams, and explore future academic and career paths.",
    audience2Feat1: "Solves Math, Physics, Chemistry problems",
    audience2Feat2: "Systematizes knowledge for exams",
    audience2Feat3: "Explores and orients study majors",
    audience3Title: "For Self-Learners",
    audience3Desc:
      "Build flexible learning roadmaps, provide quality resources, and maintain motivation for you to effectively conquer any new skill.",
    audience3Feat1: "Creates roadmaps for new skills",
    audience3Feat2: "Maintains daily learning motivation",
    audience3Feat3: "Practice through real-world projects",
    aboutUsTitle: "Meet Our Team",
    aboutUsSubtitle:
      "The passionate minds behind making learning accessible to everyone.",
    teamMember1Name: "Dony",
    teamMember1Role: "Founder & Lead Developer",
    teamMember2Name: "Gemini",
    teamMember2Role: "AI Co-Pilot",
    teamMember3Name: "You",
    teamMember3Role: "Valued User & Contributor",
    pricingTitle: "Choose Your Plan",
    pricingSubtitle: "Simple, transparent pricing for every type of learner.",
    plan1Name: "Free",
    plan1Desc: "For casual learners and to try our platform.",
    planPerMonth: "/ month",
    plan1Feat1: "20 messages per day",
    plan1Feat2: "Standard AI model",
    plan1Feat3: "Community support",
    planButton: "Get Started",
    planPopular: "POPULAR",
    plan2Name: "Pro",
    plan2Desc: "For dedicated students and professionals.",
    plan2Feat1: "Unlimited messages",
    plan2Feat2: "Advanced AI model",
    plan2Feat3: "Priority support",
    plan2Feat4: "Conversation history",
    plan3Name: "Premium",
    plan3Desc: "For teams and educational institutions.",
    plan3Price: "Contact Us",
    plan3Feat1: "Everything in Pro",
    plan3Feat2: "Team management",
    plan3Feat3: "Custom integrations",
    plan3Feat4: "Dedicated support",
    planContactButton: "Contact Sales",
    testimonialQuote:
      "\"StudyDony AI completely changed how I learn. Instead of spending hours debugging a small code error, I now get a solution in minutes. It's truly the smart learning partner I've always wished for.\"",
    testimonialName: "Nakamura Aoi",
    testimonialRole: "2nd Year Student, Information Technology",
    faqTitle: "Frequently Asked Questions",
    faqSubtitle: "All your questions will be answered here.",
    faq1Question: "Is StudyDony AI free?",
    faq1Answer:
      "Yes! We offer a generous free plan for you to experience the core features. For more advanced needs, we have paid plans with superior features.",
    faq2Question: "Is my data secure?",
    faq2Answer:
      "Security is our top priority. All conversations are encrypted. We are committed to not sharing your personal data with any third party.",
    faq3Question: "Which programming languages does the AI support?",
    faq3Answer:
      "Our AI is trained on a massive dataset and can support most popular programming languages today, including Python, JavaScript, Java, C++, Ruby, and more.",
    finalCtaTitle: "Ready to Elevate Your Learning?",
    finalCtaSubtitle:
      "Join thousands of other learners and experience the future of education today.",
    finalCtaButton: "Try for Free",
    footerLinks: "Links",
    footerSubscribe: "Subscribe to our newsletter",
    footerSubscribeDesc: "Get the latest news and updates from our team.",
    footerEmailPlaceholder: "Enter your email",
    footerSubscribeButton: "Subscribe",
    footerRights: "¬© 2025 StudyDony AI. All rights reserved.",
    footerSlogan: "Learn Deeper, Faster, Smarter.",
    footerPrivacy: "Privacy Policy",
    footerTerms: "Terms of Service",
  },
  ja: {
    title: "AIÂ≠¶Áøí„Ç¢„Ç∑„Çπ„Çø„É≥„Éà - „Çà„ÇäÊ∑±„Åè„ÄÅ„Çà„ÇäÈÄü„Åè„ÄÅ„Çà„ÇäË≥¢„ÅèÂ≠¶„Å∂",
    metaDescription:
      "StudyDony AI„ÅØ„ÄÅÊ¶ÇÂøµ„ÅÆË™¨Êòé„ÄÅ„Ç≥„Éº„Éâ„ÅÆ„Éá„Éê„ÉÉ„Ç∞„ÄÅÂ≠¶Áøí„É≠„Éº„Éâ„Éû„ÉÉ„Éó„ÅÆ‰ΩúÊàê„ÇíÊîØÊè¥„Åô„Çã„ÄÅ„ÅÇ„Å™„Åü„ÅÆ„Éë„Éº„ÇΩ„Éä„É´Â≠¶Áøí„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Åß„Åô„ÄÇAI„Åß„Çà„ÇäÊ∑±„Åè„ÄÅ„Çà„ÇäÈÄü„Åè„ÄÅ„Çà„ÇäË≥¢„ÅèÂ≠¶„Å≥„Åæ„Åó„Çá„ÅÜ„ÄÇ",
    ogTitle: "StudyDony AI - „ÅÇ„Å™„Åü„ÅÆ„Éë„Éº„ÇΩ„Éä„É´Â≠¶Áøí„Ç¢„Ç∑„Çπ„Çø„É≥„Éà",
    ogDescription:
      "„Çà„ÇäÊ∑±„Åè„ÄÅ„Çà„ÇäÈÄü„Åè„ÄÅ„Çà„ÇäË≥¢„ÅèÂ≠¶„Å∂„ÄÇÊ¨°‰∏ñ‰ª£„ÅÆÂ≠¶Áøí„Éë„Éº„Éà„Éä„Éº„Å®ÂÖ±„Å´„ÄÅ„ÅÇ„Å™„Åü„ÅÆÂèØËÉΩÊÄß„ÇíËß£„ÅçÊîæ„Å°„ÄÅÁü•Ë≠ò„ÇíÂæÅÊúç„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ",
    appName: "üéì StudyDony AI",
    navHome: "„Éõ„Éº„É†",
    navFeatures: "Ê©üËÉΩ",
    navSubjects: "ÁßëÁõÆ",
    navAboutUs: "ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶",
    navPricing: "ÊñôÈáë",
    navAudience: "ÂØæË±°ËÄÖ",
    navFAQ: "„Çà„Åè„ÅÇ„ÇãË≥™Âïè",
    navCTA: "„ÉÅ„É£„ÉÉ„Éà„Éú„ÉÉ„Éà„ÇíË©¶„Åô",
    heroTitle: "„ÅÇ„Å™„Åü„ÅÆ„Éë„Éº„ÇΩ„Éä„É´AIÂ≠¶Áøí„Ç¢„Ç∑„Çπ„Çø„É≥„Éà",
    heroSlogan:
      "„Çà„ÇäÊ∑±„Åè„ÄÅ„Çà„ÇäÈÄü„Åè„ÄÅ„Çà„ÇäË≥¢„ÅèÂ≠¶„Å∂„ÄÇÊ¨°‰∏ñ‰ª£„ÅÆÂ≠¶Áøí„Éë„Éº„Éà„Éä„Éº„Å®ÂÖ±„Å´„ÄÅ„ÅÇ„Å™„Åü„ÅÆÂèØËÉΩÊÄß„ÇíËß£„ÅçÊîæ„Å°„ÄÅÁü•Ë≠ò„ÇíÂæÅÊúç„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ",
    heroCTA: "ÁÑ°Êñô„ÅßÂ≠¶Áøí„ÇíÂßã„ÇÅ„Çã",
    featuresTitle: "ÊàêÂäü„Å´ÂøÖË¶Å„Å™„Åô„Åπ„Å¶„ÅÆ„ÉÑ„Éº„É´",
    featuresSubtitle:
      "Ë§áÈõë„Å™Ë™≤È°å„ÅÆËß£Ê±∫„Åã„ÇâÂ≠¶Áøí„É≠„Éº„Éâ„Éû„ÉÉ„Éó„ÅÆ‰ΩúÊàê„Åæ„Åß„ÄÅStudyDony AI„Åå„Çµ„Éù„Éº„Éà„Åó„Åæ„Åô„ÄÇ",
    feature1Title: "Ê¶ÇÂøµ„ÅÆË™¨Êòé",
    feature1Desc:
      "Ë¶ñË¶öÁöÑ„Å™‰æã„Å®Á∞°Âçò„Å™Ë™¨Êòé„Åß„ÄÅÊúÄ„ÇÇË§áÈõë„Å™„Éà„Éî„ÉÉ„ÇØ„ÇÇÁêÜËß£„Åó„ÇÑ„Åô„Åè„Åó„Åæ„Åô„ÄÇ",
    feature2Title: "„Ç≥„Éº„Éâ„ÅÆ„Éá„Éê„ÉÉ„Ç∞„Å®ÊúÄÈÅ©Âåñ",
    feature2Desc:
      "„Ç≥„Éº„Éá„Ç£„É≥„Ç∞„Ç®„É©„Éº„ÇíËøÖÈÄü„Å´Áô∫Ë¶ã„Éª‰øÆÊ≠£„ÄÇÊúÄÈÅ©Âåñ„ÅÆ„Åü„ÇÅ„ÅÆÊèêÊ°à„ÇíÂèó„Åë„ÄÅ„Éô„Çπ„Éà„Éó„É©„ÇØ„ÉÜ„Ç£„Çπ„ÇíÂ≠¶„Å≥„Åæ„Åô„ÄÇ",
    feature3Title: "Ë≥áÊñôÊ§úÁ¥¢",
    feature3Desc:
      "‰ø°È†º„Åß„Åç„ÇãÂ≠¶Ë°ìÊÉÖÂ†±Ê∫ê„Åã„ÇâÊÉÖÂ†±„ÇíÁµ±Âêà„ÉªË¶ÅÁ¥Ñ„Åó„ÄÅÁ†îÁ©∂ÊôÇÈñì„ÇíÁØÄÁ¥Ñ„Åó„Åæ„Åô„ÄÇ",
    feature4Title: "„É≠„Éº„Éâ„Éû„ÉÉ„Éó‰ΩúÊàê",
    feature4Desc:
      "„Å©„Çì„Å™„Çπ„Ç≠„É´„ÇÑÁßëÁõÆ„Åß„ÇÇÂÖãÊúç„Åß„Åç„Çã„Çà„ÅÜ„ÄÅ„Éë„Éº„ÇΩ„Éä„É©„Ç§„Ç∫„Åï„Çå„ÅüÂ≠¶ÁøíË®àÁîª„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ",
    demo1Label: "Ê¶ÇÂøµ„Å´„Å§„ÅÑ„Å¶Ë≥™Âïè„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑÔºö",
    demo1Placeholder: "‰æãÔºöÂÖâÂêàÊàê",
    demo1Button: "‚ú® Ë™¨Êòé„Åô„Çã",
    demo1Loading: "Âá¶ÁêÜ‰∏≠...",
    demo1Error: "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ",
    subjectsTitle: "ÁßëÁõÆ„ÇíÊé¢„Åô",
    subjectsSubtitle:
      "Á´∂ÊäÄ„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„Åã„ÇâÊï∞Â≠¶„Åæ„Åß„ÄÅÊàêÂäü„Å´ÂøÖË¶Å„Å™„Åô„Åπ„Å¶„Åå„Åì„Åì„Å´„ÅÇ„Çä„Åæ„Åô„ÄÇ",
    previewTag: "„Éó„É¨„Éì„É•„Éº",
    tagWebDev: "„Ç¶„Çß„ÉñÈñãÁô∫",
    tagMath: "Êï∞Â≠¶",
    tagPhysics: "Áâ©ÁêÜ",
    tagEnglish: "Ëã±Ë™û",
    tagCompetition: "ÂØæÊà¶„É¢„Éº„Éâ",
    subjectWeb1Title: "HTML & CSS",
    subjectWeb1Desc: "„Ç¶„Çß„Éñ„Éö„Éº„Ç∏„ÅÆÊßãÈÄ†„Å®Âü∫Êú¨ÁöÑ„Å™„Çπ„Çø„Ç§„É™„É≥„Ç∞„ÄÇ",
    subjectWeb2Title: "JavaScript",
    subjectWeb2Desc: "DOMÊìç‰Ωú„ÄÅ„Ç§„Éô„É≥„Éà„ÄÅES6ÊßãÊñá„ÄÇ",
    subjectWeb3Title: "„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Éï„É¨„Éº„É†„ÉØ„Éº„ÇØ",
    subjectWeb3Desc: "React/Vue„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÄÅProps„ÄÅÁä∂ÊÖãÁÆ°ÁêÜ„ÄÇ",
    subjectWeb4Title: "„Éê„ÉÉ„ÇØ„Ç®„É≥„ÉâAPI",
    subjectWeb4Desc: "RESTful„ÅÆÂéüÂâá„ÄÅCRUDÊìç‰Ωú„ÄÅHTTP„ÅÆÂü∫Êú¨„ÄÇ",
    subjectWeb5Title: "„Éá„Éº„Çø„Éô„Éº„Çπ",
    subjectWeb5Desc: "SQL„ÇØ„Ç®„É™„ÄÅ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÄÅORM„ÅÆÂü∫Êú¨„ÄÇ",
    subjectWeb6Title: "DevOps",
    subjectWeb6Desc: "Docker„ÄÅCI/CD„Éë„Ç§„Éó„É©„Ç§„É≥„ÄÅ„Éá„Éó„É≠„Ç§„É°„É≥„Éà„ÄÇ",
    subjectMath1Title: "‰ª£Êï∞",
    subjectMath1Desc: "ÊñπÁ®ãÂºè„ÄÅ‰∏çÁ≠âÂºè„ÄÅÈÄ£Á´ãÊñπÁ®ãÂºè„ÇíËß£„Åç„Åæ„Åô„ÄÇ",
    subjectMath2Title: "Âπæ‰ΩïÂ≠¶",
    subjectMath2Desc: "Âë®Èï∑„ÄÅÈù¢Á©ç„ÄÅ‰ΩìÁ©ç„ÄÅ„Åä„Çà„Å≥ÂÆöÁêÜ„ÇíË®àÁÆó„Åó„Åæ„Åô„ÄÇ",
    subjectMath3Title: "Ëß£ÊûêÂ≠¶",
    subjectMath3Desc: "Ê•µÈôê„ÄÅÂæÆÂàÜ„ÄÅÁ©çÂàÜ„ÄÅ„Åä„Çà„Å≥„Åù„ÅÆÂøúÁî®„ÄÇ",
    subjectPhysics1Title: "ÂäõÂ≠¶",
    subjectPhysics1Desc: "ÈÅãÂãï„ÄÅÂäõ„ÄÅ„Ç®„Éç„É´„ÇÆ„Éº„ÄÅ„Åä„Çà„Å≥„Éã„É•„Éº„Éà„É≥„ÅÆÊ≥ïÂâá„ÄÇ",
    subjectPhysics2Title: "ÈõªÊ∞ó",
    subjectPhysics2Desc: "ÈõªÊµÅ„ÄÅÂõûË∑Ø„ÄÅ„Åä„Çà„Å≥„Ç™„Éº„É†„ÅÆÊ≥ïÂâá„ÄÅ„Ç≠„É´„Éí„Éõ„ÉÉ„Éï„ÅÆÊ≥ïÂâá„ÄÇ",
    subjectPhysics3Title: "ÂÖâÂ≠¶",
    subjectPhysics3Desc: "ÂèçÂ∞Ñ„ÄÅÂ±àÊäò„ÄÅ„É¨„É≥„Ç∫„ÄÅ„Åä„Çà„Å≥ÂÖâÂ≠¶ÁèæË±°„ÄÇ",
    subjectEnglish1Title: "ÊñáÊ≥ï",
    subjectEnglish1Desc: "ÊôÇÂà∂„ÄÅÊñáÊßãÈÄ†„ÄÅ„Åä„Çà„Å≥ÊñáÊ≥ïË¶èÂâá„ÄÇ",
    subjectEnglish2Title: "Ë™ûÂΩô",
    subjectEnglish2Desc: "„Éà„Éî„ÉÉ„ÇØ„Å®ÊñáËÑà„Å´Âøú„Åò„ÅüË™ûÂΩô„ÅÆÊã°Â§ß„ÄÇ",
    subjectEnglish3Title: "Ë©¶È®ìÂØæÁ≠ñ",
    subjectEnglish3Desc: "IELTS„ÄÅTOEIC„ÄÅTOEFL„ÅÆ„Åü„ÇÅ„ÅÆÊà¶Áï•„Å®ÊºîÁøí„ÄÇ",
    subjectCompetition1Title: "Á´∂ÊäÄ„Ç¢„É´„Ç¥„É™„Ç∫„É†",
    subjectCompetition1Desc: "„ÇΩ„Éº„Éà„ÄÅÊ§úÁ¥¢„ÄÅÂãïÁöÑË®àÁîªÊ≥ï„ÅÆÂïèÈ°å„Å´ÊåëÊà¶„Åó„Åæ„Åô„ÄÇ",
    subjectCompetition2Title: "„ÇØ„Ç§„Ç∫Á∑¥Áøí",
    subjectCompetition2Desc: "ÊôÇÈñìÂà∂Èôê‰ªò„Åç„ÅÆÊ®°Êì¨Ë©¶È®ì„Çª„ÉÉ„Éà„ÇíÁ∑¥Áøí„Åó„Åæ„Åô„ÄÇ",
    subjectCompetition3Title: "AIÂØæÊ±∫",
    subjectCompetition3Desc: "Áï∞„Å™„ÇãÈõ£ÊòìÂ∫¶„ÅÆAI„Å®ÂïèÈ°åËß£Ê±∫„ÅßÁ´∂„ÅÑ„Åæ„Åô„ÄÇ",
    demo2Label: "„Å©„ÅÆ„Çπ„Ç≠„É´„ÇíÂ≠¶„Å≥„Åü„ÅÑ„Åß„Åô„ÅãÔºü",
    demo2Placeholder: "‰æãÔºö30Êó•„ÅßReactJS„ÇíÂ≠¶„Å∂",
    demo2Button: "‚ú® „É≠„Éº„Éâ„Éû„ÉÉ„Éó„Çí‰ΩúÊàê",
    demo2Error: "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ",
    audienceTitle: "„Åô„Åπ„Å¶„ÅÆÂ≠¶ÁøíËÄÖ„Å´‰ø°È†º„Åï„Çå„Å¶„ÅÑ„Åæ„Åô",
    audienceSubtitle:
      "Áü•Ë≠ò„ÅÆÊóÖË∑Ø„Å´„ÅÑ„ÇãË™∞„ÇÇ„Åå„ÄÅÁßÅ„Åü„Å°„ÅÆ„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„ÅÆÂØæË±°„Åß„Åô„ÄÇ",
    audienceChartLabels: ["Â§ßÂ≠¶Áîü", "È´òÊ†°Áîü", "Áã¨Â≠¶ËÄÖ"],
    audienceTab1: "Â§ßÂ≠¶Áîü",
    audienceTab2: "È´òÊ†°Áîü",
    audienceTab3: "Áã¨Â≠¶ËÄÖ",
    audience1Title: "Â§ßÂ≠¶ÁîüÂêë„Åë",
    audience1Desc:
      "Á†îÁ©∂„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÄÅË§áÈõë„Å™„É¨„Éù„Éº„Éà„ÄÅÂ∞ÇÈñÄÁßëÁõÆ„Å´‰∏çÂèØÊ¨†„Å™„Éë„Éº„Éà„Éä„Éº„ÄÇË≥áÊñôÊ§úÁ¥¢„ÇÑ„Éá„Éê„ÉÉ„Ç∞„ÅÆÊôÇÈñì„ÇíÁØÄÁ¥Ñ„Åó„ÄÅ„Çà„ÇäÊ∑±„ÅÑÂ≠¶Áøí„Å´ÈõÜ‰∏≠„Åß„Åç„Åæ„Åô„ÄÇ",
    audience1Feat1: "Ë©≥Á¥∞„Å™Á†îÁ©∂ÊîØÊè¥",
    audience1Feat2: "„Ç¢„É´„Ç¥„É™„Ç∫„É†„Å®ÂÆöÁêÜ„ÅÆË™¨Êòé",
    audience1Feat3: "ÁßëÂ≠¶„É¨„Éù„Éº„Éà‰ΩúÊàê„ÅÆË£úÂä©",
    audience2Title: "È´òÊ†°ÁîüÂêë„Åë",
    audience2Desc:
      "Èõ£„Åó„ÅÑÊºîÁøíÂïèÈ°å„ÅÆËß£Ê±∫„ÄÅÈáçË¶Å„Å™Ë©¶È®ì„ÅÆÊ∫ñÂÇô„ÄÅÂ∞ÜÊù•„ÅÆÂ≠¶Âïè„ÇÑ„Ç≠„É£„É™„Ç¢„Éë„Çπ„ÅÆÊé¢Ê±Ç„ÇíÊîØÊè¥„Åô„Çã‰ª≤Èñì„Åß„Åô„ÄÇ",
    audience2Feat1: "Êï∞Â≠¶„ÄÅÁâ©ÁêÜ„ÄÅÂåñÂ≠¶„ÅÆÂïèÈ°åËß£Ê±∫",
    audience2Feat2: "Ë©¶È®ìÂØæÁ≠ñ„ÅÆ„Åü„ÇÅ„ÅÆÁü•Ë≠ò‰ΩìÁ≥ªÂåñ",
    audience2Feat3: "Â∞ÇÊîªÂàÜÈáé„ÅÆÊé¢Ê±Ç„Å®ÊñπÂêë‰ªò„Åë",
    audience3Title: "Áã¨Â≠¶ËÄÖÂêë„Åë",
    audience3Desc:
      "ÊüîËªü„Å™Â≠¶Áøí„É≠„Éº„Éâ„Éû„ÉÉ„Éó„ÇíÊßãÁØâ„Åó„ÄÅË≥™„ÅÆÈ´ò„ÅÑ„É™„ÇΩ„Éº„Çπ„ÇíÊèê‰æõ„Åó„ÄÅÊñ∞„Åó„ÅÑ„Çπ„Ç≠„É´„ÇíÂäπÊûúÁöÑ„Å´ÁøíÂæó„Åô„Çã„Åü„ÇÅ„ÅÆ„É¢„ÉÅ„Éô„Éº„Ç∑„Éß„É≥„ÇíÁ∂≠ÊåÅ„Åó„Åæ„Åô„ÄÇ",
    audience3Feat1: "Êñ∞„Çπ„Ç≠„É´„ÅÆÂ≠¶Áøí„É≠„Éº„Éâ„Éû„ÉÉ„Éó‰ΩúÊàê",
    audience3Feat2: "Êó•„ÄÖ„ÅÆÂ≠¶ÁøíÊÑèÊ¨≤„ÅÆÁ∂≠ÊåÅ",
    audience3Feat3: "ÂÆüË∑µÁöÑ„Å™„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇíÈÄö„Åó„ÅüÁ∑¥Áøí",
    aboutUsTitle: "„ÉÅ„Éº„É†Á¥π‰ªã",
    aboutUsSubtitle:
      "Â≠¶Áøí„Çí„Åô„Åπ„Å¶„ÅÆ‰∫∫„Å´Ë∫´Ëøë„Å™„ÇÇ„ÅÆ„Å´„Åô„Çã„Å®„ÅÑ„ÅÜ‰ΩøÂëΩ„ÅÆË£è„Å´„ÅÑ„ÇãÊÉÖÁÜ±ÁöÑ„Å™È†≠ËÑ≥„ÄÇ",
    teamMember1Name: "„Éâ„Éã„Éº",
    teamMember1Role: "ÂâµË®≠ËÄÖÂÖº„É™„Éº„ÉâÈñãÁô∫ËÄÖ",
    teamMember2Name: "„Ç∏„Çß„Éü„Éã",
    teamMember2Role: "AIÂÖ±ÂêåÊìçÁ∏¶Â£´",
    teamMember3Name: "„ÅÇ„Å™„Åü",
    teamMember3Role: "Ë≤¥Èáç„Å™„É¶„Éº„Ç∂„ÉºÂÖºË≤¢ÁåÆËÄÖ",
    pricingTitle: "„Éó„É©„É≥„ÇíÈÅ∏Êäû",
    pricingSubtitle: "„Åô„Åπ„Å¶„ÅÆÂ≠¶ÁøíËÄÖ„ÅÆ„Åü„ÇÅ„ÅÆ„Ç∑„É≥„Éó„É´„ÅßÈÄèÊòé„Å™‰æ°Ê†ºË®≠ÂÆö„ÄÇ",
    plan1Name: "„Éï„É™„Éº",
    plan1Desc: "„Ç´„Ç∏„É•„Ç¢„É´„Å™Â≠¶ÁøíËÄÖ„ÇÑ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„ÇíË©¶„Åô„Åü„ÇÅ„Å´„ÄÇ",
    planPerMonth: "/ Êúà",
    plan1Feat1: "1Êó•20„É°„ÉÉ„Çª„Éº„Ç∏",
    plan1Feat2: "Ê®ôÊ∫ñAI„É¢„Éá„É´",
    plan1Feat3: "„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Çµ„Éù„Éº„Éà",
    planButton: "Âßã„ÇÅ„Çã",
    planPopular: "‰∫∫Ê∞ó",
    plan2Name: "„Éó„É≠",
    plan2Desc: "ÁÜ±ÂøÉ„Å™Â≠¶Áîü„ÇÑÂ∞ÇÈñÄÂÆ∂„ÅÆ„Åü„ÇÅ„Å´„ÄÇ",
    plan2Feat1: "ÁÑ°Âà∂Èôê„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏",
    plan2Feat2: "È´òÂ∫¶„Å™AI„É¢„Éá„É´",
    plan2Feat3: "ÂÑ™ÂÖà„Çµ„Éù„Éº„Éà",
    plan2Feat4: "‰ºöË©±Â±•Ê≠¥",
    plan3Name: "„Éó„É¨„Éü„Ç¢„É†",
    plan3Desc: "„ÉÅ„Éº„É†„ÇÑÊïôËÇ≤Ê©üÈñ¢„ÅÆ„Åü„ÇÅ„Å´„ÄÇ",
    plan3Price: "„ÅäÂïè„ÅÑÂêà„Çè„Åõ",
    plan3Feat1: "„Éó„É≠„ÅÆ„Åô„Åπ„Å¶",
    plan3Feat2: "„ÉÅ„Éº„É†ÁÆ°ÁêÜ",
    plan3Feat3: "„Ç´„Çπ„Çø„É†Áµ±Âêà",
    plan3Feat4: "Â∞ÇÁî®„Çµ„Éù„Éº„Éà",
    planContactButton: "Âñ∂Ê•≠„Å∏„ÅÆ„ÅäÂïè„ÅÑÂêà„Çè„Åõ",
    testimonialQuote:
      "„ÄåStudyDony AI„ÅØÁßÅ„ÅÆÂ≠¶ÁøíÊñπÊ≥ï„ÇíÂÆåÂÖ®„Å´Â§â„Åà„Åæ„Åó„Åü„ÄÇÂ∞è„Åï„Å™„Ç≥„Éº„Éâ„Ç®„É©„Éº„ÅÆ„Éá„Éê„ÉÉ„Ç∞„Å´‰ΩïÊôÇÈñì„ÇÇË≤ª„ÇÑ„Åô‰ª£„Çè„Çä„Å´„ÄÅÊï∞ÂàÜ„ÅßËß£Ê±∫Á≠ñ„ÇíÂæó„Çâ„Çå„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åó„Åü„ÄÇÁßÅ„Åå„Åö„Å£„Å®Êúõ„Çì„Åß„ÅÑ„Åü„Çπ„Éû„Éº„Éà„Å™Â≠¶Áøí„Éë„Éº„Éà„Éä„Éº„Åß„Åô„ÄÇ„Äç",
    testimonialName: "‰∏≠Êùë„ÅÇ„Åä„ÅÑ",
    testimonialRole: "ÊÉÖÂ†±ÊäÄË°ìÂ≠¶ÈÉ® 2Âπ¥Áîü",
    faqTitle: "„Çà„Åè„ÅÇ„ÇãË≥™Âïè",
    faqSubtitle: "„ÅÇ„Å™„Åü„ÅÆ„Åô„Åπ„Å¶„ÅÆË≥™Âïè„ÅØ„Åì„Åì„ÅßËß£Ê±∫„Åï„Çå„Åæ„Åô„ÄÇ",
    faq1Question: "StudyDony AI„ÅØÁÑ°Êñô„Åß„Åô„ÅãÔºü",
    faq1Answer:
      "„ÅØ„ÅÑÔºÅ‰∏ªË¶Å„Å™Ê©üËÉΩ„Çí‰ΩìÈ®ì„Åß„Åç„ÇãÂØõÂ§ß„Å™ÁÑ°Êñô„Éó„É©„É≥„ÇíÊèê‰æõ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Çà„ÇäÈ´òÂ∫¶„Å™„Éã„Éº„Ç∫„Å´„ÅØ„ÄÅÂÑ™„Çå„ÅüÊ©üËÉΩ„ÇíÂÇô„Åà„ÅüÊúâÊñô„Éó„É©„É≥„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ",
    faq2Question: "ÁßÅ„ÅÆ„Éá„Éº„Çø„ÅØÂÆâÂÖ®„Åß„Åô„ÅãÔºü",
    faq2Answer:
      "„Çª„Ç≠„É•„É™„ÉÜ„Ç£„ÅØÁßÅ„Åü„Å°„ÅÆÊúÄÂÑ™ÂÖà‰∫ãÈ†Ö„Åß„Åô„ÄÇ„Åô„Åπ„Å¶„ÅÆ‰ºöË©±„ÅØÊöóÂè∑Âåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ„ÅäÂÆ¢Êßò„ÅÆÂÄã‰∫∫„Éá„Éº„Çø„ÇíÁ¨¨‰∏âËÄÖ„Å®ÂÖ±Êúâ„Åó„Å™„ÅÑ„Åì„Å®„Çí„ÅäÁ¥ÑÊùü„Åó„Åæ„Åô„ÄÇ",
    faq3Question: "AI„ÅØ„Å©„ÅÆ„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞Ë®ÄË™û„Çí„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Åæ„Åô„ÅãÔºü",
    faq3Answer:
      "ÁßÅ„Åü„Å°„ÅÆAI„ÅØÂ∑®Â§ß„Å™„Éá„Éº„Çø„Çª„ÉÉ„Éà„Åß„Éà„É¨„Éº„Éã„É≥„Ç∞„Åï„Çå„Å¶„Åä„Çä„ÄÅPython„ÄÅJavaScript„ÄÅJava„ÄÅC++„ÄÅRuby„Å™„Å©„ÄÅ‰ªäÊó•„ÅÆ„Åª„Å®„Çì„Å©„ÅÆ‰∏ÄËà¨ÁöÑ„Å™„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞Ë®ÄË™û„Çí„Çµ„Éù„Éº„Éà„Åß„Åç„Åæ„Åô„ÄÇ",
    finalCtaTitle: "Â≠¶Áøí„Çí„É¨„Éô„É´„Ç¢„ÉÉ„Éó„Åô„ÇãÊ∫ñÂÇô„ÅØ„Åß„Åç„Åæ„Åó„Åü„ÅãÔºü",
    finalCtaSubtitle:
      "‰ΩïÂçÉ‰∫∫„ÇÇ„ÅÆÂ≠¶ÁøíËÄÖ„Å®‰∏ÄÁ∑í„Å´„ÄÅÊïôËÇ≤„ÅÆÊú™Êù•„Çí‰ªäÊó•‰ΩìÈ®ì„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ",
    finalCtaButton: "ÁÑ°Êñô„ÅßË©¶„Åô",
    footerLinks: "„É™„É≥„ÇØ",
    footerSubscribe: "„Éã„É•„Éº„Çπ„É¨„Çø„Éº„ÇíË≥ºË™≠",
    footerSubscribeDesc:
      "ÁßÅ„Åü„Å°„ÅÆ„ÉÅ„Éº„É†„Åã„ÇâÊúÄÊñ∞„ÅÆ„Éã„É•„Éº„Çπ„Å®„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„ÇíÂÖ•Êâã„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
    footerEmailPlaceholder: "„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ",
    footerSubscribeButton: "Ë≥ºË™≠",
    footerRights: "¬© 2025 StudyDony AI. ÂÖ®Ëëó‰ΩúÊ®©ÊâÄÊúâ„ÄÇ",
    footerSlogan: "„Çà„ÇäÊ∑±„Åè„ÄÅ„Çà„ÇäÈÄü„Åè„ÄÅ„Çà„ÇäË≥¢„ÅèÂ≠¶„Å∂„ÄÇ",
    footerPrivacy: "„Éó„É©„Ç§„Éê„Ç∑„Éº„Éù„É™„Ç∑„Éº",
    footerTerms: "Âà©Áî®Ë¶èÁ¥Ñ",
  },
};

// Data for subject cards
const subjectData = {
  web: [
    { icon: "üíª", titleKey: "subjectWeb1Title", descKey: "subjectWeb1Desc" },
    { icon: "‚ö°Ô∏è", titleKey: "subjectWeb2Title", descKey: "subjectWeb2Desc" },
    { icon: "‚öõÔ∏è", titleKey: "subjectWeb3Title", descKey: "subjectWeb3Desc" },
    { icon: "‚öôÔ∏è", titleKey: "subjectWeb4Title", descKey: "subjectWeb4Desc" },
    { icon: "üóÉÔ∏è", titleKey: "subjectWeb5Title", descKey: "subjectWeb5Desc" },
    { icon: "üöÄ", titleKey: "subjectWeb6Title", descKey: "subjectWeb6Desc" },
  ],
  math: [
    { icon: "‚ûï", titleKey: "subjectMath1Title", descKey: "subjectMath1Desc" },
    { icon: "üìê", titleKey: "subjectMath2Title", descKey: "subjectMath2Desc" },
    { icon: "üìà", titleKey: "subjectMath3Title", descKey: "subjectMath3Desc" },
  ],
  physics: [
    {
      icon: "üçé",
      titleKey: "subjectPhysics1Title",
      descKey: "subjectPhysics1Desc",
    },
    {
      icon: "üí°",
      titleKey: "subjectPhysics2Title",
      descKey: "subjectPhysics2Desc",
    },
    {
      icon: "üåà",
      titleKey: "subjectPhysics3Title",
      descKey: "subjectPhysics3Desc",
    },
  ],
  english: [
    {
      icon: "‚úçÔ∏è",
      titleKey: "subjectEnglish1Title",
      descKey: "subjectEnglish1Desc",
    },
    {
      icon: "üó£Ô∏è",
      titleKey: "subjectEnglish2Title",
      descKey: "subjectEnglish2Desc",
    },
    {
      icon: "üéì",
      titleKey: "subjectEnglish3Title",
      descKey: "subjectEnglish3Desc",
    },
  ],
  competition: [
    {
      icon: "üèÜ",
      titleKey: "subjectCompetition1Title",
      descKey: "subjectCompetition1Desc",
    },
    {
      icon: "‚è±Ô∏è",
      titleKey: "subjectCompetition2Title",
      descKey: "subjectCompetition2Desc",
    },
    {
      icon: "ü§ñ",
      titleKey: "subjectCompetition3Title",
      descKey: "subjectCompetition3Desc",
    },
  ],
};

// Wait for the DOM to be fully loaded before running scripts
document.addEventListener("DOMContentLoaded", () => {
  const langSwitcher = document.getElementById("language-switcher");
  const allTextElements = document.querySelectorAll("[data-key]");
  const allPlaceholderElements = document.querySelectorAll(
    "[data-key-placeholder]"
  );
  const allContentElements = document.querySelectorAll("[data-key-content]");
  let myChart;
  let currentLang = "en"; // Set default language to English

  const subjectCardsGrid = document.getElementById("subject-cards-grid");
  const subjectTagsContainer = document.getElementById(
    "subject-tags-container"
  );

  // Function to render subject cards based on category and language
  function renderSubjectCards(category) {
    const cardsData = subjectData[category] || [];
    subjectCardsGrid.innerHTML = "";
    cardsData.forEach((card) => {
      const cardElement = document.createElement("div");
      cardElement.className = "subject-card";
      cardElement.innerHTML = `
                <div class="text-3xl mb-3">${card.icon}</div>
                <h3 class="text-xl font-bold mb-2" data-key="${
                  card.titleKey
                }">${
        translations[currentLang][card.titleKey] || card.titleKey
      }</h3>
                <p class="text-gray-600" data-key="${card.descKey}">${
        translations[currentLang][card.descKey] || card.descKey
      }</p>
            `;
      subjectCardsGrid.appendChild(cardElement);
    });
  }

  // Function to update all text content on the page based on the selected language
  function updateContent(lang) {
    currentLang = lang;
    if (!translations[lang]) return;

    // Update text content
    allTextElements.forEach((element) => {
      const key = element.getAttribute("data-key");
      if (translations[lang][key]) {
        element.innerHTML = translations[lang][key];
      }
    });

    // Update placeholder text
    allPlaceholderElements.forEach((element) => {
      const key = element.getAttribute("data-key-placeholder");
      if (translations[lang][key]) {
        element.placeholder = translations[lang][key];
      }
    });

    // Update meta tag content attributes
    allContentElements.forEach((element) => {
      const key = element.getAttribute("data-key-content");
      if (translations[lang][key]) {
        element.setAttribute("content", translations[lang][key]);
      }
    });

    // Set the lang attribute of the html tag
    document.documentElement.lang = lang;

    // Update chart labels if the chart exists
    if (
      myChart &&
      translations[lang] &&
      translations[lang].audienceChartLabels
    ) {
      myChart.data.labels = translations[lang].audienceChartLabels;
      myChart.update();
    }

    // Re-render subject cards with the new language
    const activeTag = subjectTagsContainer.querySelector(".active");
    if (activeTag) {
      renderSubjectCards(activeTag.dataset.category);
    }
  }

  // Event listener for the language switcher dropdown
  langSwitcher.addEventListener("change", (event) => {
    updateContent(event.target.value);
  });

  // Event listener for subject category tags
  subjectTagsContainer.addEventListener("click", (e) => {
    if (e.target.classList.contains("subject-tag")) {
      subjectTagsContainer.querySelector(".active")?.classList.remove("active");
      e.target.classList.add("active");
      renderSubjectCards(e.target.dataset.category);
    }
  });

  // AI Animation in Hero section
  const animationContainer = document.querySelector(".ai-animation");
  if (animationContainer) {
    const nodes = [];
    const nodeCount = 7;
    for (let i = 0; i < nodeCount; i++) {
      const node = document.createElement("div");
      node.className = "node";
      const angle = (i / nodeCount) * 2 * Math.PI;
      const x = 50 + 40 * Math.cos(angle);
      const y = 50 + 40 * Math.sin(angle);
      node.style.left = `${x}%`;
      node.style.top = `${y}%`;
      node.style.transform = `translate(-50%, -50%)`;
      if (i % 2 === 0) {
        node.classList.add("pulse");
        node.style.animationDelay = `${i * 0.2}s`;
      }
      animationContainer.appendChild(node);
      nodes.push(node);
    }
    const centerNode = document.createElement("div");
    centerNode.className = "node pulse";
    centerNode.style.left = "50%";
    centerNode.style.top = "50%";
    centerNode.style.transform = "translate(-50%, -50%) scale(1.5)";
    animationContainer.appendChild(centerNode);
  }

  // Intersection Observer for fade-in animations on scroll
  const sections = document.querySelectorAll(".fade-in-section");
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("is-visible");
          observer.unobserve(entry.target);
        }
      });
    },
    { threshold: 0.1 }
  );

  sections.forEach((section) => {
    observer.observe(section);
  });

  // Accordion functionality for the FAQ section
  const faqItems = document.querySelectorAll(".faq-item");
  faqItems.forEach((item) => {
    const question = item.querySelector(".faq-question");
    const answer = item.querySelector(".faq-answer");
    const icon = item.querySelector(".faq-icon");

    question.addEventListener("click", () => {
      const isOpen = answer.style.maxHeight && answer.style.maxHeight !== "0px";

      // Close all other FAQ items
      faqItems.forEach((otherItem) => {
        otherItem.querySelector(".faq-answer").style.maxHeight = "0px";
        otherItem.querySelector(".faq-icon").style.transform = "rotate(0deg)";
      });

      // Open the clicked item if it was closed
      if (!isOpen) {
        answer.style.maxHeight = answer.scrollHeight + "px";
        icon.style.transform = "rotate(45deg)";
      }
    });
  });

  // Tab functionality for the Audience section
  const tabButtons = document.querySelectorAll(".tab-button");
  const tabContents = document.querySelectorAll(".tab-content");

  function activateTab(tabNumber) {
    tabButtons.forEach((button) => {
      button.classList.toggle("active", button.dataset.tab === tabNumber);
    });
    tabContents.forEach((content) => {
      content.classList.toggle(
        "hidden",
        content.id !== `tab-content-${tabNumber}`
      );
    });
  }

  tabButtons.forEach((button) => {
    button.addEventListener("click", () => {
      activateTab(button.dataset.tab);
    });
  });

  // Chart.js implementation for the Audience chart
  const ctx = document.getElementById("audienceChart").getContext("2d");
  myChart = new Chart(ctx, {
    type: "doughnut",
    data: {
      labels: translations.en.audienceChartLabels,
      datasets: [
        {
          label: "User Audience",
          data: [40, 35, 25],
          backgroundColor: [
            "rgba(59, 130, 246, 0.8)",
            "rgba(16, 185, 129, 0.8)",
            "rgba(249, 115, 22, 0.8)",
          ],
          borderColor: ["#FFFFFF", "#FFFFFF", "#FFFFFF"],
          borderWidth: 3,
          hoverOffset: 12,
        },
      ],
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      cutout: "70%",
      plugins: {
        legend: {
          position: "bottom",
          labels: {
            padding: 20,
            font: { size: 14, family: "'Inter', sans-serif" },
          },
        },
        tooltip: {
          callbacks: {
            label: function (context) {
              let label = context.label || "";
              if (label) {
                label += ": ";
              }
              if (context.parsed !== null) {
                label += context.parsed + "%";
              }
              return label;
            },
          },
        },
      },
      onClick: (event, elements) => {
        if (elements.length > 0) {
          const tabNumber = (elements[0].index + 1).toString();
          activateTab(tabNumber);
          const targetTab = document.querySelector(
            `.tab-button[data-tab='${tabNumber}']`
          );
          if (targetTab) {
            targetTab.scrollIntoView({ behavior: "smooth", block: "nearest" });
          }
        }
      },
    },
  });

  // *** CHANGED PART: Securely call the Gemini API via a Netlify Function ***
  async function callGemini(prompt, buttonElement, outputElement, errorKey) {
    const textSpan = buttonElement.querySelector(".btn-text");
    const loader = buttonElement.querySelector(".loader");

    // Show loader and disable button
    textSpan.classList.add("hidden");
    loader.classList.remove("hidden");
    buttonElement.disabled = true;
    outputElement.innerHTML = "";

    try {
      // The API endpoint is now our own Netlify Function
      const apiUrl = "/.netlify/functions/call-gemini";

      const response = await fetch(apiUrl, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        // Send the prompt in the body of the request
        body: JSON.stringify({ prompt: prompt }),
      });

      if (!response.ok) {
        throw new Error(`API call failed with status: ${response.status}`);
      }

      const result = await response.json();

      if (
        result.candidates &&
        result.candidates.length > 0 &&
        result.candidates[0].content.parts.length > 0
      ) {
        let text = result.candidates[0].content.parts[0].text;
        // Simple formatting to display newlines correctly in HTML
        text = text.replace(/\n/g, "<br>");
        outputElement.innerHTML = text;
      } else {
        // Handle cases where the API returns a valid response but no candidates (e.g., safety blocks)
        const errorMessage =
          result.promptFeedback?.blockReason ||
          "Invalid response structure from API.";
        console.error("API Error:", errorMessage);
        outputElement.innerHTML = `<span class="text-red-500">${translations[currentLang][errorKey]}</span>`;
      }
    } catch (error) {
      console.error("Gemini API call error:", error);
      outputElement.innerHTML = `<span class="text-red-500">${translations[currentLang][errorKey]}</span>`;
    } finally {
      // Hide loader and re-enable button
      textSpan.classList.remove("hidden");
      loader.classList.add("hidden");
      buttonElement.disabled = false;
    }
  }

  // Event listener for the "Concept Explanation" demo
  const conceptInput = document.getElementById("concept-input");
  const conceptBtn = document.getElementById("concept-btn");
  const conceptOutput = document.getElementById("concept-output");

  conceptBtn.addEventListener("click", () => {
    const userInput = conceptInput.value.trim();
    if (!userInput) return;
    const prompt = `Explain the concept of "${userInput}" in a simple, single paragraph, suitable for a student.`;
    callGemini(prompt, conceptBtn, conceptOutput, "demo1Error");
  });

  // Event listener for the "Roadmap Building" demo
  const roadmapInput = document.getElementById("roadmap-input");
  const roadmapBtn = document.getElementById("roadmap-btn");
  const roadmapOutput = document.getElementById("roadmap-output");

  roadmapBtn.addEventListener("click", () => {
    const userInput = roadmapInput.value.trim();
    if (!userInput) return;
    const prompt = `Create a simple, 4-step learning roadmap for someone who wants to learn "${userInput}". Each step should be a short, actionable sentence. Present it as a numbered list (e.g., 1. First step...).`;
    callGemini(prompt, roadmapBtn, roadmapOutput, "demo2Error");
  });

  // Initialization logic on page load
  function initializePage() {
    // Set the first subject tag as active by default
    subjectTagsContainer
      .querySelector('[data-category="web"]')
      .classList.add("active");
    // Set the default language and render content
    updateContent("en");
    // Make the first section visible immediately
    document.querySelector(".fade-in-section").classList.add("is-visible");
  }

  initializePage();
});
